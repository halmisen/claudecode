//@version=5
indicator(shorttitle="BBAWE XZ 7.24", title="Bollinger Awesome Alert XZ 7.24", overlay=true)

// Author: Lawrie Steven
// Date:   22-Apr-2017
// Revision: R1 -> v5 Migration
//
// Description:
// ============
// This indicator is an implementation of the Bollinger Band and Awesome Oscillator
// scalping system.
//
// Time Frames: 1, 5, 10, 15 ,30 min.
// Currency pairs: majors.
//
// Strategy:
// Going LONG: Enter when the 3 EMA crosses up through the Bollinger middle band,
// and the Awesome Oscillator is approaching or crossing its zero line upwards.
//
// Going SHORT: Enter when the 3 EMA crosses down through the Bollinger middle band,
// and the Awesome Oscillator is approaching or crossing its zero line downwards.
//
// Take profit: 10-20 pips or when Awesome Oscillator changes color.
//
// References:
// - https://www.forexstrategiesresources.com/scalping-forex-strategies-iii/337-bollinger-bands-and-chaos-awesome-scalping-system
// - "Squeeze Momentum Indicator [LazyBear]"

// === INPUTS ===

// Bollinger Bands Inputs
bool_bb_use_ema = input.bool(false, title="Use EMA for Bollinger Band")
bool_bb_filter = input.bool(false, title="Filter Buy/Sell with Bollinger Bands")
bool_sqz_filter = input.bool(false, title="Filter Buy/Sell with BB squeeze")
int_bb_length = input.int(20, minval=1, title="Bollinger Length")
source_bb_source = input.source(close, title="Bollinger Source")
float_bb_mult = input.float(2.0, title="Base Multiplier", minval=0.5, maxval=10)
// EMA inputs
int_fast_ma_len = input.int(3, title="Fast EMA length", minval=2)
// Awesome Inputs
int_nLengthSlow = input.int(34, minval=1, title="Awesome Length Slow")
int_nLengthFast = input.int(5, minval=1, title="Awesome Length Fast")

int_sqz_length = input.int(100, "BB Relative Squeeze Length", minval=5)
int_sqz_threshold = input.int(50, "BB Squeeze Threshold %", maxval=99, step=5)

// === SERIES ===

// Breakout Indicator Inputs
float_ema_1 = ta.ema(source_bb_source, int_bb_length)
float_sma_1 = ta.sma(source_bb_source, int_bb_length)
float_bb_basis = bool_bb_use_ema ? float_ema_1 : float_sma_1
float_fast_ma = ta.ema(source_bb_source, int_fast_ma_len)

// Deviation
float_dev = ta.stdev(source_bb_source, int_bb_length)
float_bb_dev = float_bb_mult * float_dev

// Upper bands
float_bb_upper = float_bb_basis + float_bb_dev
// Lower Bands
float_bb_lower = float_bb_basis - float_bb_dev

// Calculate Awesome Oscillator
float_xSMA1_hl2 = ta.sma(hl2, int_nLengthFast)
float_xSMA2_hl2 = ta.sma(hl2, int_nLengthSlow)
float_xSMA1_SMA2 = float_xSMA1_hl2 - float_xSMA2_hl2
// Calculate direction of AO
int_AO = float_xSMA1_SMA2 >= 0 ? (float_xSMA1_SMA2 > float_xSMA1_SMA2[1] ? 1 : 2) : (float_xSMA1_SMA2 > float_xSMA1_SMA2[1] ? -1 : -2)

// Calculate BB spread and average spread
float_spread = float_bb_upper - float_bb_lower
float_avgspread = ta.sma(float_spread, int_sqz_length)

// Calculate BB relative %width for Squeeze indication
float_bb_squeeze = float_spread / float_avgspread * 100

// Calculate Upper and Lower band painting offsets based on 50% of atr.
float_bb_offset = ta.atr(14) * 0.5
float_bb_sqz_upper = float_bb_upper + float_bb_offset
float_bb_sqz_lower = float_bb_lower - float_bb_offset

// === PLOTTING ===

// plot BB basis
plot(float_bb_basis, title="Basis Line", color=color.new(color.red, 10), linewidth=2)
// plot BB upper and lower bands
plot_ubi = plot(float_bb_upper, title="Upper Band Inner", color=color.new(color.blue, 10), linewidth=1)
plot_lbi = plot(float_bb_lower, title="Lower Band Inner", color=color.new(color.blue, 10), linewidth=1)
// center BB channel fill
fill(plot_ubi, plot_lbi, title="Center Channel Fill", color=color.new(color.silver, 90))

//Indicate BB squeeze based on threshold.
plot_usqzi = plot(float_bb_sqz_upper, "Hide Sqz Upper", color=color.new(color.white, 100))
plot_lsqzi = plot(float_bb_sqz_lower, "Hide Sqz Lower", color=color.new(color.white, 100))
color_squeeze_fill = float_bb_squeeze > int_sqz_threshold ? color.new(color.white, 50) : color.new(color.blue, 50)
fill(plot_ubi, plot_usqzi, color=color_squeeze_fill)
fill(plot_lbi, plot_lsqzi, color=color_squeeze_fill)

// plot fast ma
plot(float_fast_ma, title="Fast EMA", color=color.new(color.black, 10), linewidth=2)

// Calc breakouts
bool_break_down = ta.crossunder(float_fast_ma, float_bb_basis) and close < float_bb_basis and math.abs(int_AO) == 2 and (not bool_bb_filter or close > float_bb_lower) and (not bool_sqz_filter or float_bb_squeeze > int_sqz_threshold)
bool_break_up = ta.crossover(float_fast_ma, float_bb_basis) and close > float_bb_basis and math.abs(int_AO) == 1 and (not bool_bb_filter or close < float_bb_upper) and (not bool_sqz_filter or float_bb_squeeze > int_sqz_threshold)

// Show Break Alerts
plotshape(bool_break_down, title="Breakout Down", style=shape.arrowdown, location=location.abovebar, size=size.auto, text="Sell", color=color.new(color.red, 0))
plotshape(bool_break_up, title="Breakout Up", style=shape.arrowup, location=location.belowbar, size=size.auto, text="Buy", color=color.new(color.green, 0))

// === ALERTS ===
if bool_break_down or bool_break_up
    alert("BBAWE Alert close=" + str.tostring(close), alert.freq_once_per_bar)
if bool_break_down
    alert("SELL close=" + str.tostring(close), alert.freq_once_per_bar)
if bool_break_up
    alert("BUY close=" + str.tostring(close), alert.freq_once_per_bar)
